name: Chocolatine Checker
run-name: ${{ github.actor }}'s push checker
on: 
  push:
    branches-ignore:
      - "ga-ignore-**"
  pull_request:
    branches-ignore:
      - "ga-ignore-**"

env:
  MIRROR_URL: git@github.com:YetAnotherMechanicusEnjoyer/template.git
  MIRROR_REPO: YetAnotherMechanicusEnjoyer/template
  EXECUTABLES: a.out

jobs:
  check_repository:
    runs-on: ubuntu-latest
    outputs:
      same_repo: ${{ steps.repo.outputs.same_repo }}
    steps:
      - name: Check repository's name
        id: repo
        run: |
          if [[ "${{ github.repository }}" == "${{ env.MIRROR_REPO }}" ]]; then
            echo "same_repo=true" >> $GITHUB_OUTPUT
          else
            echo "same_repo=false" >> $GITHUB_OUTPUT
          fi

  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          repository: ''

      - name: Coding Style
        run: check.sh . /tmp

      - name: Coding style error
        run: |
          input=/tmp/coding-style-reports.log
          while IFS= read -r line; do
            file=$(echo "$line" | cut -d':' -f1)
            n_line=$(echo "$line" | cut -d':' -f2)
            title=$(echo "$line" | cut -d':' -f3)
            err=$(echo "$line" | cut -d':' -f4-)
            echo "::error title=${title} coding style error,file=${file},line=${n_line}::${err}"
          done < $input

      - name: Report Results
        run: |
          NBE=$(cat /tmp/coding-style-reports.log | wc -l)
          if [ $NBE -gt 0 ]; then
            echo "check_coding_style=false" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "check_coding_style=true" >> $GITHUB_OUTPUT
          fi

  check_program_compilation:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    container: epitechcontent/epitest-docker:latest
    needs: check_coding_style
    if: success()
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          repository: ''

      - name: Compile Repo
        run: make

      - name: Clean Repo
        run: make clean

      - name: Check Compilation
        run: |
          for binary in ${{ env.EXECUTABLES }}; do
            if [ ! -x "$binary" ]; then
              echo "::error::File $binary does not exist or is not executable"
              echo "check_compilation=false" >> $GITHUB_OUTPUT
              exit 1
            else
              echo "check_compilation=true" >> $GITHUB_OUTPUT
            fi
          done

  run_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    container: epitechcontent/epitest-docker:latest
    if: success()
    needs: check_program_compilation
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          repository: ''

      - name: Compile & Run tests
        run: make run_tests

  push_to_mirror:
    runs-on: ubuntu-latest
    needs: [run_tests, check_repository]
    if: ${{ github.event_name == 'push' && success() && needs.check_repository.outputs.same_repo == 'false' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{env.MIRROR_URL}}
          ssh_private_key: ${{secrets.GIT_SSH_PRIVATE_KEY}}
